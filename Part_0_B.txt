application at https://studies.cs.helsinki.fi/exampleapp.

The application exists only to demonstrate some basic concepts of the course, and is, by no means, an example of how 
a modern web application should be made. On the contrary, it demonstrates some old techniques of web development, 
which could even be considered bad practices nowadays.

HTTP GET
The server and the web browser communicate with each other using the HTTP protocol. The Network tab shows how 
the browser and the server communicate.
cc: https://developer.mozilla.org/en-US/docs/Web/HTTP

In this section, we see a overview of how websites work and what all are the relevant concepts for both tradional and 
morden websites

**HTTP GET
*Traditional web applications
**Running application logic in the browser
**Event handlers and Callback functions
**Document Object Model or DOM
*Manipulating the document object from console
*CSS
**Loading a page containing JavaScript - review
**Forms and HTTP POST
**AJAX
**Single page app
**JavaScript-libraries --> why and how react came into being. like the history of client/browser side JS. 
Full-stack web development
JavaScript fatigue

Vanilla JS -- plain JS, i.e no libraries are used. like the one we used in the expense tracker app for DEV club TSEC

what is AJAX --> Allows us to communicate with remote servers
in an asynchronous way. With AJAX calls, we can request data from web servers 
dynamically.
AJAX is not a programming language.
AJAX is a technique for accessing web servers from a web page.
AJAX stands for Asynchronous JavaScript And XML.
https://www.w3schools.com/whatis/whatis_ajax.asp

What is this readyState == 4 in Javascript?
State 4 means that the request had been sent, the server had finished returning the response and the browser 
had finished downloading the response content.

xhttp.open("GET", "ajax_info.txt", true);
xhttp.send();

open(method, url, async)	Specifies the type of request
			method: the type of request: GET or POST
			url: the server (file) location
			async: true (asynchronous) or false (synchronous)

send()		Sends the request to the server (used for GET)
send(string)	Sends the request to the server (used for POST)


JQuery -- its a library which enables us to do the following in a simpler manner when compared to vanilla JS :-
HTML/DOM manipulation
CSS manipulation
HTML event methods
Effects and animations
AJAX
Utilities


for async and promises:: https://youtu.be/lI1ae4REbFM?t=27598
geeksforgeeks.org/using-async-await-in-node-js/

















